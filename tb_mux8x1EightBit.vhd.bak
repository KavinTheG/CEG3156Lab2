-- Testbench for 8x1 Eight-Bit MUX

library ieee;
use ieee.std_logic_1164.all;

entity tb_mux8x1EightBit is
end entity tb_mux8x1EightBit;

architecture behavioral of tb_mux8x1EightBit is
  -- Component declaration
  component mux8x1EightBit is
    port(
      a0, a1, a2, a3, a4, a5, a6, a7: in std_logic_vector(7 downto 0);
      s : in std_logic_vector(2 downto 0);
      o : out std_logic_vector(7 downto 0)
    );
  end component;

  -- Testbench signals
  signal input_0_tb  : std_logic_vector(7 downto 0) := (others => '0');
  signal input_1_tb  : std_logic_vector(7 downto 0) := (others => '0');
  signal input_2_tb  : std_logic_vector(7 downto 0) := (others => '0');
  signal input_3_tb  : std_logic_vector(7 downto 0) := (others => '0');
  signal input_4_tb  : std_logic_vector(7 downto 0) := (others => '0');
  signal input_5_tb  : std_logic_vector(7 downto 0) := (others => '0');
  signal input_6_tb  : std_logic_vector(7 downto 0) := (others => '0');
  signal input_7_tb  : std_logic_vector(7 downto 0) := (others => '0');
  signal select_tb   : std_logic_vector(2 downto 0) := (others => '0');
  signal output_tb   : std_logic_vector(7 downto 0);

begin
  -- Instantiation of the mux8x1EightBit component
  uut_mux8x1EightBit: mux8x1EightBit
  port map (
    input_0  => input_0_tb,
    input_1  => input_1_tb,
    input_2  => input_2_tb,
    input_3  => input_3_tb,
    input_4  => input_4_tb,
    input_5  => input_5_tb,
    input_6  => input_6_tb,
    input_7  => input_7_tb,
    s   => select_tb,
    output   => output_tb
  );

  -- Stimulus process
  stimulus: process
  begin
    -- Test case 1: Select input_3 (select = "011")
    input_3_tb <= "10101010";
    select_tb <= "011";
    wait for 10 ns;

    -- Test case 2: Select input_7 (select = "111")
    input_7_tb <= "11001100";
    select_tb <= "111";
    wait for 10 ns;

    -- Add more test cases as needed

    -- End the simulation
    wait;
  end process stimulus;

end architecture behavioral;
