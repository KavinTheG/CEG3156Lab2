LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
ENTITY controlLogicUnit_tb IS
END controlLogicUnit_tb;
 
ARCHITECTURE behavior OF controlLogicUnit_tb IS
 
	
	component controlLogicUnit is
	port(
		op: in std_logic_vector (5 downto 0);
		
		-- if BEQ will occur (if branch is 1 and data is equal)
		isBEQ : in std_logic;
		
		regDst: buffer std_logic;
		aluSrc: buffer std_logic;
		memToReg: buffer std_logic;
		--regWrite: out std_logic;
		memRead: buffer std_logic;
		memWrite: buffer std_logic;
		branch: out std_logic;
		branchNotEqual: out std_logic;
		
		jump: buffer std_logic;
		aluOp1: buffer std_logic;
		aluOp0: buffer std_logic;

		--pipeline 
		flush: out std_logic:='0';
		EX: out std_logic_vector(3 downto 0);
		M: out std_logic_vector(2 downto 0)
	);
	end component;	
	
   --Inputs
   signal op : std_logic_vector (5 downto 0);
	 signal isBEQ: std_logic;
 
    --Outputs
   signal regDst : std_logic;
	signal aluSrc: std_logic;
	signal memToReg: std_logic;
	signal memRead: std_logic;
	signal memWrite: std_logic;
	signal branch: std_logic;
	signal branchNotEqual: std_logic;
	signal jump: std_logic;
	signal aluOp1: std_logic;
	signal aluOp0: std_logic;
	
	signal flush: std_logic;
	signal EX : std_logic_vector(3 downto 0);
	signal M : std_logic_vector(2 downto 0);
	signal	WB :  std_logic_vector(1 downto 0);
 
BEGIN
 

		  
	uut: controlLogicUnit port map(
			op => op,
			isBEQ => isBEQ,
			
			regDst => regDst,
			aluSrc => aluSrc,
			memToReg => memToReg,
			memRead => memRead,
			memWrite => memWrite,
			branch => branch,
			branchNotEqual => branchNotEqual,
			jump => jump,
			aluOp1 => aluOp1,
			aluOp0 => aluOp0,
			
			flush => flush,
			EX => EX,
			M => M,
			WB => WB
	);	
 
   -- Stimulus process
   stim_proc: process
   begin
    isBEQ <= '0';
    op <= "000000";     
 
      wait for 50 ns; 
 
	 op <= "100011"; 
	 
      wait for 50 ns; 
 
    op <= "101011"; 
 
        wait for 50 ns;   
 
    op <= "000100"; 
      
        wait for 50 ns;  
		  
	 op <= "000110";  
	 
			wait for 50 ns;  
		  
	 op <= "000010"; 
	 
			wait for 50 ns;  
		  
	 op <= "111111"; 
	 
	 
			wait for 50 ns;  
		  
	 op <= "000100";
	 isBEQ <= '1';
	 
	    wait for 50 ns; 
 
    end process;
 
END;